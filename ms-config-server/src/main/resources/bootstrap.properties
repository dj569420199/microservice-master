## 处理中文乱码
server.tomcat.uri-encoding=UTF-8
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true
spring.messages.encoding=UTF-8

spring.application.name=ms-config-server

##client（客户端）向server（服务器）注册服务的配置
#instance.appname:指明注册中的名字
eureka.instance.appname=ms-config-server
#service-url.defaultZone:配置注册中心地址
eureka.client.service-url.defaultZone=http://127.0.0.1:8081/eureka/

## 配置中心
spring.cloud.config.server.git.uri=https://github.com/dj569420199/config-center
spring.cloud.config.server.git.username=dj569420199
spring.cloud.config.server.git.password=Dj_722125
spring.cloud.config.server.git.default-label=master
spring.cloud.config.server.git.search-paths=config

#    Spring Cloud Config 有它的一套访问规则，我们通过这套规则在浏览器上直接访问就可以。
#
#    /{application}/{profile}[/{label}]
#    /{application}-{profile}.yml
#    /{label}/{application}-{profile}.yml
#    /{application}-{profile}.properties
#    /{label}/{application}-{profile}.properties
#    {application} 就是应用名称，对应到配置文件上来，就是配置文件的名称部分，例如我上面创建的配置文件。
#
#    {profile} 就是配置文件的版本，我们的项目有开发版本、测试环境版本、生产环境版本，对应到配置文件上来就是以 application-{profile}.yml 加以区分，例如application-dev.yml、application-sit.yml、application-prod.yml。
#
#    {label} 表示 git 分支，默认是 master 分支，如果项目是以分支做区分也是可以的，那就可以通过不同的 label 来控制访问不同的配置文件了。
#
#    上面的 5 条规则中，我们只看前三条，因为我这里的配置文件都是 yml 格式的。根据这三条规则，我们可以通过以下地址查看配置文件内容:
#
#    http://localhost:3301/config-single-client/dev/master
#
#    http://localhost:3301/config-single-client/prod
#
#    http://localhost:3301/config-single-client-dev.yml
#
#    http://localhost:3301/config-single-client-prod.yml
#
#    http://localhost:3301/master/config-single-client-prod.yml
#
#    通过访问以上地址，如果可以正常返回数据，则说明配置中心服务端一切正常。